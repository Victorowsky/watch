{"version":3,"sources":["comp/Button.js","comp/AdminPanel.js","comp/PlayerAndChat.js","comp/Snackbars/Success.js","comp/Snackbars/Error.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","root","margin","spacing","borderColor","color","transition","OutlinedButtons","text","onClick","style","classes","className","Button","variant","AdminPanel","useContext","DataContext","admin","setAdmin","setCurrentVideoLink","socket","useState","editVideoLink","setEditVideoLink","type","value","placeholder","onChange","e","target","display","preventDefault","window","confirm","emit","PlayerAndChat","location","useLocation","twitchStreamer","useParams","undefined","onlineUsers","setOnlineUsers","currentRoom","setCurrentRoom","currentVideoLink","setIsSuccess","setIsError","setErrorMessage","setSuccessMessage","isPlaying","setIsPlaying","player","useRef","useEffect","interval","setInterval","currentSeconds","current","getCurrentTime","clearInterval","addEventListener","ev","pathname","on","docs","videoDuration","getDuration","currentTime","seekTo","offAny","success","message","ref","onPlay","onPause","playing","url","width","height","controls","volume","border","title","id","src","Alert","props","elevation","marginTop","CustomizedSnackbars","isSuccess","successMessage","handleClose","event","reason","Snackbar","open","autoHideDuration","onClose","severity","isError","errorMessage","React","createContext","io","App","history","useHistory","fetch","then","res","json","document","Provider","path","exact","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a31fb73c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      borderColor: \"white\",\r\n      color: \"white\",\r\n      transition: \"0.3s\",\r\n      \"&:hover\": {\r\n        color: \"red\",\r\n        borderColor: \"red\",\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function OutlinedButtons({ text, onClick, style }) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Button\r\n        onClick={onClick && onClick}\r\n        style={style && style}\r\n        variant=\"outlined\"\r\n      >\r\n        {text ? text : \"Enter text\"}\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { useState } from \"react\";\r\n\r\nimport Button from \"./Button\";\r\nimport { DataContext } from \"../App\";\r\nimport \"./AdminPanel.css\";\r\n\r\nconst AdminPanel = () => {\r\n  const { admin, setAdmin, setCurrentVideoLink, socket } = useContext(\r\n    DataContext\r\n  );\r\n  const [editVideoLink, setEditVideoLink] = useState();\r\n\r\n  const handleAddVideo = () => {\r\n    setCurrentVideoLink(editVideoLink);\r\n    setEditVideoLink(\"\");\r\n  };\r\n\r\n  const handleLeaveAdmin = () => {\r\n    const confirmAnswer = window.confirm(\r\n      \"Are you sure you don't want to be an admin?\"\r\n    );\r\n    if (confirmAnswer) {\r\n      setAdmin(false);\r\n      socket.emit(\"adminLeave\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <br />\r\n      {admin && (\r\n        // ADDING VIDEO PANEL\r\n\r\n        <form>\r\n          <input\r\n            type=\"text\"\r\n            value={editVideoLink}\r\n            placeholder={\"VIDEO URL\"}\r\n            onChange={(e) => {\r\n              if (admin) {\r\n                setEditVideoLink(e.target.value);\r\n              }\r\n            }}\r\n          />\r\n\r\n          <button\r\n            style={{ display: \"none\" }}\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              handleAddVideo();\r\n            }}\r\n            type=\"submit\"\r\n          ></button>\r\n        </form>\r\n      )}\r\n      <div className=\"adminButtonsDiv\">\r\n        <Button text={\"LEAVE ADMIN\"} onClick={handleLeaveAdmin} />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminPanel;\r\n","import React, { useContext } from \"react\";\r\nimport { useEffect, useState, useRef } from \"react\";\r\nimport ReactPlayer from \"react-player/lazy\";\r\nimport { DataContext } from \"../App\";\r\nimport \"./PlayerAndChat.css\";\r\nimport { useParams, useLocation } from \"react-router-dom\";\r\nimport Button from \"./Button\";\r\n\r\nconst PlayerAndChat = () => {\r\n  let location = useLocation();\r\n  let { twitchStreamer } = useParams();\r\n  // DEFAULT VALUE IS MY CHANNEL\r\n  if (twitchStreamer === undefined) {\r\n    twitchStreamer = \"victorowsky_\";\r\n  }\r\n  const [onlineUsers, setOnlineUsers] = useState(null);\r\n  const [currentRoom, setCurrentRoom] = useState(twitchStreamer);\r\n\r\n  const {\r\n    admin,\r\n    setCurrentVideoLink,\r\n    currentVideoLink,\r\n    socket,\r\n    setAdmin,\r\n    setIsSuccess,\r\n    setIsError,\r\n    setErrorMessage,\r\n    setSuccessMessage,\r\n  } = useContext(DataContext);\r\n\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  const player = useRef();\r\n  const maxDelay = 2;\r\n  const maxDelayLive = 6;\r\n  const websiteURL = \"victorowsky.github.io\"; // FOR TWITCH CHAT\r\n  // const websiteURL = \"localhost\"; // FOR TWITCH CHAT\r\n\r\n  // ADMIN EMITS HIS DATA TO SHARE WITH OTHERS\r\n  useEffect(() => {\r\n    let interval;\r\n    if (admin) {\r\n      interval = setInterval(() => {\r\n        socket.emit(`adminData`, {\r\n          currentRoom,\r\n          currentSeconds: player.current.getCurrentTime(),\r\n        });\r\n      }, 3000);\r\n    }\r\n    return () => {\r\n      // socket.emit(\"adminLeave\", { currentRoom });\r\n      clearInterval(interval);\r\n    };\r\n  }, [admin, socket, currentRoom]);\r\n\r\n  // EMIT CHANGE VIDEO IF ADMIN CHANGES\r\n  useEffect(() => {\r\n    if (admin) {\r\n      socket.emit(`videoChange`, {\r\n        currentVideoLink,\r\n        currentRoom,\r\n      });\r\n    }\r\n    // HERE CAN BE CURRENTROOM, CUZ I WILL SEND ANOTHER ADMIN DATA\r\n    // eslint-disable-next-line\r\n  }, [currentVideoLink, socket]);\r\n\r\n  // DELETING ADMIN IF SWITCHING BETWEEN CHANNELS\r\n  useEffect(() => {\r\n    window.addEventListener(\"beforeunload\", (ev) => {\r\n      ev.preventDefault();\r\n      socket.emit(\"leaveRoom\", { currentRoom });\r\n      socket.emit(\"adminLeave\");\r\n    });\r\n    setCurrentRoom(twitchStreamer);\r\n    // eslint-disable-next-line\r\n  }, [location.pathname]);\r\n\r\n  // JOINING TO ROOM\r\n  useEffect(() => {\r\n    socket.emit(`joinRoom`, { currentRoom });\r\n    return () => {\r\n      socket.emit(\"leaveRoom\", { currentRoom });\r\n      setAdmin(false);\r\n      socket.emit(\"adminLeave\");\r\n    };\r\n    // eslint-disable-next-line\r\n  }, [currentRoom]);\r\n\r\n  // SOCKETS LISTENERS FOR USERS ONLY\r\n  useEffect(() => {\r\n    socket.on(\"onlineUsersAnswer\", ({ onlineUsers }) => {\r\n      setOnlineUsers(onlineUsers);\r\n    });\r\n\r\n    if (!admin) {\r\n      socket.on(\"videoChangeAnswer\", ({ currentVideoLink }) => {\r\n        // TURNED OFF FOR ADMIN TO NOT LOOP PAGE\r\n        setCurrentVideoLink(currentVideoLink);\r\n      });\r\n      socket.on(\"isPlayingSocketAnswer\", ({ isPlaying, currentRoom }) => {\r\n        setIsPlaying(isPlaying);\r\n      });\r\n\r\n      socket.on(\"joinRoomAnswer\", ({ docs }) => {\r\n        setCurrentVideoLink(docs.currentVideoLink);\r\n        setOnlineUsers(docs.onlineUsers);\r\n      });\r\n\r\n      // SYNC SECONDS WITH ADMIN\r\n      socket.on(`adminDataAnswer`, ({ currentSeconds }) => {\r\n        if (player.current) {\r\n          const videoDuration = player.current.getDuration();\r\n          const currentTime = player.current.getCurrentTime();\r\n          // FOR LIVESTREAMS\r\n          if (videoDuration > currentSeconds) {\r\n            if (\r\n              !(\r\n                currentTime < currentSeconds + maxDelayLive &&\r\n                currentTime > currentSeconds - maxDelayLive\r\n              )\r\n            ) {\r\n              // MAX 2 SENONDS DIFFERENCE\r\n              player.current.seekTo(currentSeconds, \"seconds\");\r\n            }\r\n          } else {\r\n            // HERE IS LIVESTREAM VERSION\r\n            if (\r\n              !(\r\n                currentTime < videoDuration + maxDelay - 3 &&\r\n                currentTime > videoDuration - maxDelay - 3\r\n              )\r\n            ) {\r\n              player.current.seekTo(videoDuration - 3, \"seconds\");\r\n            }\r\n          }\r\n        }\r\n      });\r\n\r\n      return () => {\r\n        socket.offAny();\r\n      };\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [currentRoom, admin, socket]);\r\n\r\n  const startSendingTimeToSocket = () => {\r\n    // AVAILABLE ONLY FOR ADMIN\r\n    if (admin) {\r\n      setIsPlaying(true);\r\n      socket.emit(\"isPlaying\", {\r\n        isPlaying: true,\r\n        currentRoom,\r\n      });\r\n    }\r\n  };\r\n\r\n  const stopSendingTimeToSocket = () => {\r\n    // AVAILABLE ONLY FOR ADMIN\r\n    if (admin) {\r\n      setIsPlaying(false);\r\n      socket.emit(\"isPlaying\", {\r\n        isPlaying: false,\r\n        currentRoom,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleAdminRequest = () => {\r\n    socket.emit(\"adminRequest\", { currentRoom: twitchStreamer });\r\n  };\r\n\r\n  socket.on(\"adminRequestAnswer\", ({ success, message }) => {\r\n    if (success) {\r\n      setIsSuccess(true);\r\n      setSuccessMessage(message);\r\n      setAdmin(true);\r\n    } else {\r\n      setIsError(true);\r\n      setErrorMessage(message);\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div className=\"videoAndChat\">\r\n      <div className=\"playerAndChat\">\r\n        <div className=\"player-wrapper\">\r\n          <ReactPlayer\r\n            ref={player}\r\n            onPlay={startSendingTimeToSocket}\r\n            onPause={stopSendingTimeToSocket}\r\n            playing={isPlaying}\r\n            className=\"react-player\"\r\n            url={currentVideoLink}\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            controls={true}\r\n            volume={0.1}\r\n          />\r\n        </div>\r\n        <div className=\"twitchChat\">\r\n          <span className=\"onlineUsers\">\r\n            {onlineUsers !== null ? `${onlineUsers} ONLINE` : \"CONNECTING\"}\r\n          </span>\r\n          <iframe\r\n            style={{ border: \"2px solid #121212\" }}\r\n            title=\"TwitchChat\"\r\n            id=\"chat_embed\"\r\n            src={`https://www.twitch.tv/embed/${twitchStreamer}/chat?darkpopout&parent=${websiteURL}`}\r\n            height=\"100%\"\r\n            width=\"100%\"\r\n          ></iframe>\r\n          {!admin && (\r\n            <Button\r\n              text={\"GET ADMIN\"}\r\n              onClick={handleAdminRequest}\r\n              style={{ borderColor: \"white\", color: \"white\" }}\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PlayerAndChat;\r\n","import React from \"react\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { DataContext } from \"../../App\";\r\nimport { useContext } from \"react\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    \"& > * + *\": {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function CustomizedSnackbars() {\r\n  const { isSuccess, setIsSuccess, successMessage } = useContext(DataContext);\r\n  const classes = useStyles();\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setIsSuccess(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Snackbar open={isSuccess} autoHideDuration={3000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity=\"success\">\r\n          {successMessage}\r\n        </Alert>\r\n      </Snackbar>\r\n\r\n      {/* <Alert severity=\"success\">This is a success message!</Alert> */}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { DataContext } from \"../../App\";\r\nimport { useContext } from \"react\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    \"& > * + *\": {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function CustomizedSnackbars() {\r\n  const { isError, setIsError, errorMessage } = useContext(DataContext);\r\n  const classes = useStyles();\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setIsError(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Snackbar open={isError} autoHideDuration={3000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity=\"error\">\r\n          {errorMessage}\r\n        </Alert>\r\n      </Snackbar>\r\n\r\n      {/* <Alert severity=\"success\">This is a success message!</Alert> */}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\nimport { Switch, Route, useHistory } from \"react-router-dom\";\nimport io from \"socket.io-client\";\nimport \"./App.css\";\nimport AdminPanel from \"./comp/AdminPanel\";\nimport PlayerAndChat from \"./comp/PlayerAndChat\";\nimport Success from \"./comp/Snackbars/Success\";\nimport Error from \"./comp/Snackbars/Error\";\nexport const DataContext = React.createContext();\n\n// const socket = io(`http://localhost:3001/`);\nconst serverURL = \"https://boiling-bastion-80662.herokuapp.com/\";\nconst socket = io(serverURL);\nconst App = () => {\n  const history = useHistory();\n  const [admin, setAdmin] = useState(false);\n  const [currentVideoLink, setCurrentVideoLink] = useState(\"\");\n  const [isSuccess, setIsSuccess] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  useEffect(() => {\n    fetch(`https://noembed.com/embed?url=${currentVideoLink}`)\n      .then((res) => res.json())\n      .then((res) => {\n        document.title = res.title;\n        if (res.title === undefined) {\n          document.title = \"Watch Together\";\n        }\n      });\n  }, [currentVideoLink]);\n\n  return (\n    <>\n      <DataContext.Provider\n        value={{\n          admin,\n          setAdmin,\n          socket,\n          currentVideoLink,\n          setCurrentVideoLink,\n          history,\n          isSuccess,\n          setIsSuccess,\n          isError,\n          setIsError,\n          successMessage,\n          setSuccessMessage,\n          errorMessage,\n          setErrorMessage,\n        }}\n      >\n        <div className=\"app\">\n          <Switch>\n            {/* DEFAULT TWITCH CHAT FOR MY CHANNEL (VICTOROWSKY_) */}\n            <Route path=\"/\" exact>\n              <PlayerAndChat />\n              <div className=\"bottomDiv\">{admin && <AdminPanel />}</div>\n            </Route>\n            <Route path=\"/:twitchStreamer\" exact>\n              <PlayerAndChat />\n              <div className=\"bottomDiv\">{admin && <AdminPanel />}</div>\n            </Route>\n          </Switch>\n          <Success />\n          <Error />\n        </div>\n      </DataContext.Provider>\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { HashRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}