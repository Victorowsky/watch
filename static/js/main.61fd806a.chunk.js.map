{"version":3,"sources":["comp/Button.js","comp/AdminPanel.js","comp/AdminLogin.js","comp/PlayerAndChat.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","root","margin","spacing","borderColor","color","transition","OutlinedButtons","text","onClick","classes","className","Button","variant","AdminPanel","useContext","DataContext","admin","setAdmin","setCurrentVideoLink","socket","setTwitchStreamerChat","useState","editVideoLink","setEditVideoLink","type","value","placeholder","onChange","e","target","style","display","preventDefault","newStreamerChat","prompt","emit","window","confirm","prev","AdminLogin","history","password","setPassword","setIsAlert","on","success","message","push","alert","setTimeout","position","top","left","transform","PlayerAndChat","currentVideoLink","onlineUsers","twitchStreamerChat","isPlaying","setIsPlaying","player","useRef","useEffect","interval","setInterval","currentSeconds","current","getCurrentTime","clearInterval","console","log","currentVideoLinkServer","isPlayingServer","twitchStreamerChatServer","videoDuration","getDuration","currentTime","seekTo","ref","onPlay","onPause","playing","url","width","height","controls","volume","border","title","id","src","React","createContext","io","App","useHistory","setOnlineUsers","fetch","then","res","json","document","undefined","Provider","path","exact","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.61fd806a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      borderColor: \"white\",\r\n      color: \"white\",\r\n      transition: \"0.3s\",\r\n      \"&:hover\": {\r\n        color: \"red\",\r\n        borderColor: \"red\",\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function OutlinedButtons({ text, onClick }) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Button onClick={onClick && onClick} variant=\"outlined\">\r\n        {text ? text : \"Enter text\"}\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { useState } from \"react\";\r\n\r\nimport Button from \"./Button\";\r\nimport { DataContext } from \"../App\";\r\nimport \"./AdminPanel.css\";\r\n\r\nconst AdminPanel = () => {\r\n  const {\r\n    admin,\r\n    setAdmin,\r\n    setCurrentVideoLink,\r\n    socket,\r\n    setTwitchStreamerChat,\r\n  } = useContext(DataContext);\r\n  const [editVideoLink, setEditVideoLink] = useState();\r\n\r\n  const handleAddVideo = () => {\r\n    setCurrentVideoLink(editVideoLink);\r\n    setEditVideoLink(\"\");\r\n  };\r\n\r\n  const handleLeaveAdmin = () => {\r\n    const confirmAnswer = window.confirm(\r\n      \"Are you sure you don't want to be admin?\"\r\n    );\r\n    if (confirmAnswer) {\r\n      setAdmin((prev) => !prev);\r\n      socket.emit(\"adminLeave\");\r\n    }\r\n  };\r\n\r\n  const handleChangeStreamersChat = () => {\r\n    const newStreamerChat = prompt(\"Insert new twitch user:\");\r\n    if (newStreamerChat) {\r\n      setTwitchStreamerChat(newStreamerChat);\r\n      socket.emit(\"changeStreamersChat\", newStreamerChat);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <br />\r\n      {admin && (\r\n        // ADDING VIDEO PANEL\r\n\r\n        <form>\r\n          <input\r\n            type=\"text\"\r\n            value={editVideoLink}\r\n            placeholder={\"VIDEO URL\"}\r\n            onChange={(e) => {\r\n              if (admin) {\r\n                setEditVideoLink(e.target.value);\r\n              }\r\n            }}\r\n          />\r\n\r\n          <button\r\n            style={{ display: \"none\" }}\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              handleAddVideo();\r\n            }}\r\n            type=\"submit\"\r\n          ></button>\r\n        </form>\r\n      )}\r\n      <div className=\"adminButtonsDiv\">\r\n        <Button\r\n          text={\"CHANGE STREAMER'S CHAT\"}\r\n          onClick={handleChangeStreamersChat}\r\n        />\r\n        <Button text={\"LEAVE ADMIN\"} onClick={handleLeaveAdmin} />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminPanel;\r\n","import React, { useState } from \"react\";\r\nimport { useContext } from \"react\";\r\nimport { DataContext } from \"../App\";\r\nconst AdminLogin = () => {\r\n  const { socket, admin, setAdmin, history } = useContext(DataContext);\r\n  const [password, setPassword] = useState(\"\");\r\n  const [isAlert, setIsAlert] = useState(0);\r\n  const handleLogin = () => {\r\n    socket.emit(\"handleLogin\", { password });\r\n  };\r\n\r\n  socket.on(\"handleLoginAnswer\", ({ success, message }) => {\r\n    if (success) {\r\n      if (!admin) {\r\n        setAdmin(true);\r\n      }\r\n      history.push(\"/\");\r\n    } else {\r\n      setIsAlert((prev) => {\r\n        prev++;\r\n        if (prev === 1) {\r\n          alert(message);\r\n        }\r\n        setTimeout(() => {\r\n          setIsAlert(0);\r\n        }, 100);\r\n      });\r\n    }\r\n  });\r\n  return (\r\n    <div\r\n      style={{\r\n        position: \"absolute\",\r\n        top: \"50%\",\r\n        left: \"50%\",\r\n        transform: \"translate(-50%,-50%)\",\r\n      }}\r\n    >\r\n      <form>\r\n        <input\r\n          type=\"text\"\r\n          value={password}\r\n          onChange={(e) => {\r\n            setPassword(e.target.value);\r\n          }}\r\n        />\r\n        <button\r\n          onClick={(e) => {\r\n            e.preventDefault();\r\n            handleLogin();\r\n          }}\r\n          type=\"submit\"\r\n          style={{ display: \"none\" }}\r\n        ></button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminLogin;\r\n","import React, { useContext } from \"react\";\r\nimport { useEffect, useState, useRef } from \"react\";\r\nimport ReactPlayer from \"react-player/lazy\";\r\nimport { DataContext } from \"../App\";\r\nimport \"./PlayerAndChat.css\";\r\n\r\nconst PlayerAndChat = () => {\r\n  const {\r\n    admin,\r\n    setCurrentVideoLink,\r\n    currentVideoLink,\r\n    socket,\r\n    onlineUsers,\r\n    twitchStreamerChat,\r\n    setTwitchStreamerChat,\r\n  } = useContext(DataContext);\r\n\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n\r\n  const player = useRef();\r\n  const maxDelay = 2;\r\n  const websiteURL = \"victorowsky.github.io\"; // FOR TWITCH CHAT\r\n  // const websiteURL = \"localhost\"; // FOR TWITCH CHAT\r\n\r\n  // ADMIN EMITS HIS DATA TO SHARE WITH OTHERS\r\n  useEffect(() => {\r\n    let interval;\r\n    if (admin) {\r\n      interval = setInterval(() => {\r\n        socket.emit(\"adminData\", {\r\n          currentSeconds: player.current.getCurrentTime(),\r\n        });\r\n      }, 3000);\r\n    }\r\n    return () => {\r\n      clearInterval(interval);\r\n      console.log(\"cleared interval\");\r\n    };\r\n  }, [admin, socket]);\r\n\r\n  // EMIT CHANGE VIDEO IF ADMIN CHANGES\r\n  useEffect(() => {\r\n    if (admin) {\r\n      socket.emit(\"videoChange\", currentVideoLink);\r\n    }\r\n  }, [currentVideoLink, admin, socket]);\r\n\r\n  useEffect(() => {\r\n    if (!currentVideoLink) {\r\n      socket.emit(\"getAllData\");\r\n    }\r\n  }, [socket, currentVideoLink]);\r\n\r\n  socket.on(\r\n    \"getAllDataAnswer\",\r\n    ({ currentVideoLinkServer, isPlayingServer, twitchStreamerChatServer }) => {\r\n      setCurrentVideoLink(currentVideoLinkServer);\r\n      setIsPlaying(isPlayingServer);\r\n      setTwitchStreamerChat(twitchStreamerChatServer);\r\n    }\r\n  );\r\n\r\n  // SOCKETS LISTENERS FOR USERS ONLY\r\n  if (!admin) {\r\n    socket.on(\"changeStreamersChatAnswer\", (twitchStreamerChatServer) => {\r\n      setTwitchStreamerChat(twitchStreamerChatServer);\r\n    });\r\n    socket.on(\"videoChangeAnswer\", (currentVideoLink) => {\r\n      // TURNED OFF FOR ADMIN TO NOT LOOP PAGE\r\n      setCurrentVideoLink(currentVideoLink);\r\n    });\r\n    socket.on(\"isPlayingSocketAnswer\", (isPlaying) => {\r\n      setIsPlaying(isPlaying);\r\n    });\r\n\r\n    // SYNC SECONDS WITH ADMIN\r\n    socket.on(\"adminDataAnswer\", ({ currentSeconds }) => {\r\n      if (player.current) {\r\n        const videoDuration = player.current.getDuration();\r\n        const currentTime = player.current.getCurrentTime();\r\n        // FOR LIVESTREAMS\r\n        if (videoDuration > currentSeconds) {\r\n          if (\r\n            !(\r\n              currentTime < currentSeconds + maxDelay &&\r\n              currentTime > currentSeconds - maxDelay\r\n            )\r\n          ) {\r\n            // MAX 2 SENONDS DIFFERENCE\r\n            player.current.seekTo(currentSeconds, \"seconds\");\r\n          }\r\n        } else {\r\n          // HERE IS LIVESTREAM VERSION\r\n          if (\r\n            !(\r\n              currentTime < videoDuration + maxDelay &&\r\n              currentTime > videoDuration - maxDelay\r\n            )\r\n          ) {\r\n            player.current.seekTo(videoDuration, \"seconds\");\r\n          }\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  const startSendingTimeToSocket = () => {\r\n    // AVAILABLE ONLY FOR ADMIN\r\n    if (admin) {\r\n      setIsPlaying(true);\r\n      socket.emit(\"isPlaying\", { isPlaying: true });\r\n    }\r\n  };\r\n\r\n  const stopSendingTimeToSocket = () => {\r\n    // AVAILABLE ONLY FOR ADMIN\r\n    if (admin) {\r\n      setIsPlaying(false);\r\n      socket.emit(\"isPlaying\", { isPlaying: false });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"videoAndChat\">\r\n      <div className=\"playerAndChat\">\r\n        <div className=\"player-wrapper\">\r\n          <ReactPlayer\r\n            ref={player}\r\n            onPlay={startSendingTimeToSocket}\r\n            onPause={stopSendingTimeToSocket}\r\n            playing={isPlaying}\r\n            className=\"react-player\"\r\n            url={currentVideoLink}\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            controls={true}\r\n            volume={0.1}\r\n          />\r\n        </div>\r\n        <div className=\"twitchChat\">\r\n          <span className=\"onlineUsers\">\r\n            {onlineUsers ? `${onlineUsers} ONLINE` : \"CONNECTING\"}\r\n          </span>\r\n          <iframe\r\n            style={{ border: \"2px solid #121212\" }}\r\n            title=\"TwitchChat\"\r\n            id=\"chat_embed\"\r\n            src={`https://www.twitch.tv/embed/${twitchStreamerChat}/chat?darkpopout&parent=${websiteURL}`}\r\n            height=\"100%\"\r\n            width=\"100%\"\r\n          ></iframe>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PlayerAndChat;\r\n","import React, { useState, useEffect } from \"react\";\nimport { Switch, Route, useHistory } from \"react-router-dom\";\nimport io from \"socket.io-client\";\nimport \"./App.css\";\nimport AdminPanel from \"./comp/AdminPanel\";\nimport AdminLogin from \"./comp/AdminLogin\";\nimport PlayerAndChat from \"./comp/PlayerAndChat\";\nexport const DataContext = React.createContext();\n\n// const socket = io(`http://localhost:3001/`);\nconst serverURL = \"https://boiling-bastion-80662.herokuapp.com/\";\nconst socket = io(serverURL);\nconst App = () => {\n  const history = useHistory();\n  const [admin, setAdmin] = useState(false);\n  const [currentVideoLink, setCurrentVideoLink] = useState(\"\");\n  const [onlineUsers, setOnlineUsers] = useState(null);\n  const [twitchStreamerChat, setTwitchStreamerChat] = useState(\"demonzz1\");\n\n  useEffect(() => {\n    fetch(`https://noembed.com/embed?url=${currentVideoLink}`)\n      .then((res) => res.json())\n      .then((res) => {\n        document.title = res.title;\n        if (res.title === undefined) {\n          document.title = \"Watch Together\";\n        }\n      });\n  }, [currentVideoLink]);\n\n  socket.on(\"onlineUsers\", (onlineUsers) => {\n    setOnlineUsers(onlineUsers);\n  });\n\n  return (\n    <>\n      <DataContext.Provider\n        value={{\n          admin,\n          setAdmin,\n          socket,\n          currentVideoLink,\n          setCurrentVideoLink,\n          history,\n          onlineUsers,\n          twitchStreamerChat,\n          setTwitchStreamerChat,\n        }}\n      >\n        <div className=\"app\">\n          <Switch>\n            <Route path=\"/\" exact>\n              <PlayerAndChat />\n\n              <div className=\"bottomDiv\">\n                {admin && <AdminPanel />}\n                {/* <Queue /> */}\n              </div>\n            </Route>\n            <Route path=\"/admin\">\n              <AdminLogin />\n            </Route>\n          </Switch>\n        </div>\n      </DataContext.Provider>\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { HashRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}