{"version":3,"sources":["comp/AdminPanel/QueueButton.js","comp/Button.js","comp/AdminPanel/QueueItem.js","comp/AdminPanel/Queue.js","comp/AdminPanel/AdminPanel.js","comp/PlayerAndChat.js","comp/Snackbars/Success.js","comp/Snackbars/Error.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","root","margin","spacing","borderColor","color","transition","boxShadow","OutlinedButtons","text","onClick","style","classes","className","Button","variant","QueueItem","item","index","useState","videoTitle","setVideoTitle","useEffect","fetch","then","res","json","title","href","target","rel","Queue","queueList","useContext","DataContext","videoQueue","map","key","AdminPanel","admin","setAdmin","setCurrentVideoLink","socket","setVideoQueue","editVideoLink","setEditVideoLink","twitchStreamer","useParams","undefined","emit","currentRoom","removeAllListeners","handleAddVideo","type","value","placeholder","onChange","e","display","preventDefault","prev","slice","justifySelf","window","confirm","PlayerAndChat","location","useLocation","onlineUsers","setOnlineUsers","setCurrentRoom","currentVideoLink","setIsSuccess","setIsError","setErrorMessage","setSuccessMessage","isPlaying","setIsPlaying","player","useRef","maxDelay","setMaxDelay","isAdminTaken","setIsAdminTaken","interval","setInterval","currentSeconds","current","getCurrentTime","clearInterval","addEventListener","ev","pathname","on","docs","console","log","videoDuration","getDuration","currentTime","seekTo","success","message","handleChangeMaxDelay","ref","onPlay","onPause","playing","onEnded","url","width","height","controls","volume","border","id","src","Alert","props","elevation","marginTop","CustomizedSnackbars","isSuccess","successMessage","handleClose","event","reason","Snackbar","open","autoHideDuration","onClose","severity","isError","errorMessage","React","createContext","io","App","history","useHistory","document","Provider","path","exact","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.62582a49.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      borderColor: \"white\",\r\n      color: \"white\",\r\n      transition: \"0.3s\",\r\n      \"&:hover\": {\r\n        boxShadow: \"0 0 10px white\",\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function OutlinedButtons({ text, onClick, style }) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Button\r\n        onClick={onClick && onClick}\r\n        style={style && style}\r\n        variant=\"outlined\"\r\n      >\r\n        {text ? text : \"Enter text\"}\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      borderColor: \"white\",\r\n      color: \"white\",\r\n      transition: \"0.3s\",\r\n      \"&:hover\": {\r\n        color: \"red\",\r\n        borderColor: \"red\",\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function OutlinedButtons({ text, onClick, style }) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Button\r\n        onClick={onClick && onClick}\r\n        style={style && style}\r\n        variant=\"outlined\"\r\n      >\r\n        {text ? text : \"Enter text\"}\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nconst QueueItem = ({ item, index }) => {\r\n  const [videoTitle, setVideoTitle] = useState();\r\n\r\n  useEffect(() => {\r\n    fetch(`https://noembed.com/embed?url=${item}`)\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        setVideoTitle(res.title);\r\n      });\r\n  }, [item]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"queueItem\">\r\n        <a href={item} target=\"_blank\" rel=\"noopener noreferrer\">\r\n          {index + 1}.{videoTitle ? videoTitle : item}\r\n        </a>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default QueueItem;\r\n","import React, { useContext } from \"react\";\r\nimport { DataContext } from \"../../App\";\r\nimport QueueItem from \"./QueueItem\";\r\nconst Queue = () => {\r\n  const { videoQueue } = useContext(DataContext);\r\n  const queueList = videoQueue.map((item, index) => {\r\n    return <QueueItem item={item} index={index} key={index} />;\r\n  });\r\n\r\n  return <div className=\"queue\">{queueList}</div>;\r\n};\r\n\r\nexport default Queue;\r\n","import React, { useContext } from \"react\";\r\nimport { useState } from \"react\";\r\nimport QueueButton from \"./QueueButton\";\r\nimport Button from \"../Button\";\r\nimport { DataContext } from \"../../App\";\r\nimport \"./AdminPanel.css\";\r\nimport Queue from \"./Queue\";\r\nimport { useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst AdminPanel = () => {\r\n  const {\r\n    admin,\r\n    setAdmin,\r\n    setCurrentVideoLink,\r\n    socket,\r\n    setVideoQueue,\r\n    videoQueue,\r\n  } = useContext(DataContext);\r\n  const [editVideoLink, setEditVideoLink] = useState();\r\n\r\n  let { twitchStreamer } = useParams();\r\n  // DEFAULT VALUE IS MY CHANNEL\r\n  if (twitchStreamer === undefined) {\r\n    twitchStreamer = \"victorowsky_\";\r\n  }\r\n\r\n  useEffect(() => {\r\n    socket.emit(\"adminQueueUpdate\", {\r\n      videoQueue,\r\n      currentRoom: twitchStreamer,\r\n    });\r\n\r\n    return () => {\r\n      socket.removeAllListeners(\"adminQueueUpdate\");\r\n    };\r\n  }, [videoQueue, socket, twitchStreamer]);\r\n\r\n  const handleAddVideoToQueue = () => {\r\n    if (editVideoLink) {\r\n      setVideoQueue((prev) => [...prev, editVideoLink]);\r\n      setEditVideoLink(\"\");\r\n    }\r\n  };\r\n\r\n  const handleAddVideo = () => {\r\n    if (editVideoLink) {\r\n      setCurrentVideoLink(editVideoLink);\r\n      setEditVideoLink(\"\");\r\n    }\r\n  };\r\n\r\n  const handleLeaveAdmin = () => {\r\n    const confirmAnswer = window.confirm(\r\n      \"Are you sure you don't want to be an admin?\"\r\n    );\r\n    if (confirmAnswer) {\r\n      setAdmin(false);\r\n      socket.emit(\"adminLeave\");\r\n    }\r\n  };\r\n\r\n  const handleAdminCheckQueue = () => {\r\n    if (admin) {\r\n      if (videoQueue) {\r\n        setCurrentVideoLink(videoQueue[0]);\r\n        setVideoQueue((prev) => prev.slice(1));\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <br />\r\n      {admin && (\r\n        // ADDING VIDEO PANEL\r\n        <form>\r\n          <input\r\n            type=\"text\"\r\n            value={editVideoLink}\r\n            placeholder={\"VIDEO URL\"}\r\n            onChange={(e) => {\r\n              if (admin) {\r\n                setEditVideoLink(e.target.value);\r\n              }\r\n            }}\r\n          />\r\n\r\n          <button\r\n            style={{ display: \"none\" }}\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              handleAddVideo();\r\n            }}\r\n            type=\"submit\"\r\n          ></button>\r\n          <div className=\"optionButtons\">\r\n            <QueueButton text={\"PLAY NOW\"} onClick={handleAddVideo} />\r\n            <QueueButton\r\n              text={\"ADD TO QUEUE\"}\r\n              onClick={handleAddVideoToQueue}\r\n            />\r\n            <QueueButton text={\"SKIP\"} onClick={handleAdminCheckQueue} />\r\n            <Button\r\n              style={{ justifySelf: \"flex-end\" }}\r\n              text={\"LEAVE ADMIN\"}\r\n              onClick={handleLeaveAdmin}\r\n            />\r\n          </div>\r\n        </form>\r\n      )}\r\n      <div className=\"adminButtonsDiv\"></div>\r\n      <Queue />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminPanel;\r\n","import React, { useContext } from \"react\";\r\nimport { useEffect, useState, useRef } from \"react\";\r\nimport ReactPlayer from \"react-player/lazy\";\r\nimport { DataContext } from \"../App\";\r\nimport \"./PlayerAndChat.css\";\r\nimport { useParams, useLocation } from \"react-router-dom\";\r\nimport Button from \"./Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport RemoveIcon from \"@material-ui/icons/Remove\";\r\n\r\nconst PlayerAndChat = () => {\r\n  let location = useLocation();\r\n  let { twitchStreamer } = useParams();\r\n  // DEFAULT VALUE IS MY CHANNEL\r\n  if (twitchStreamer === undefined) {\r\n    twitchStreamer = \"victorowsky_\";\r\n  }\r\n  const [onlineUsers, setOnlineUsers] = useState(null);\r\n  const [currentRoom, setCurrentRoom] = useState(twitchStreamer);\r\n\r\n  const {\r\n    admin,\r\n    setCurrentVideoLink,\r\n    currentVideoLink,\r\n    socket,\r\n    setAdmin,\r\n    setIsSuccess,\r\n    setIsError,\r\n    setErrorMessage,\r\n    setSuccessMessage,\r\n    videoQueue,\r\n    setVideoQueue,\r\n  } = useContext(DataContext);\r\n\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  const player = useRef();\r\n  // const maxDelay = 2;\r\n  const [maxDelay, setMaxDelay] = useState(2);\r\n  const maxDelayLive = 6;\r\n  const [isAdminTaken, setIsAdminTaken] = useState(true);\r\n  const websiteURL = \"victorowsky.github.io\"; // FOR TWITCH CHAT\r\n  // const websiteURL = \"localhost\"; // FOR TWITCH CHAT\r\n\r\n  // ADMIN EMITS HIS DATA TO SHARE WITH OTHERS\r\n  useEffect(() => {\r\n    let interval;\r\n    if (admin) {\r\n      interval = setInterval(() => {\r\n        socket.emit(`adminData`, {\r\n          currentRoom,\r\n          currentSeconds: player.current.getCurrentTime(),\r\n          videoQueue,\r\n        });\r\n      }, 3000);\r\n    }\r\n    return () => {\r\n      // socket.emit(\"adminLeave\", { currentRoom });\r\n      clearInterval(interval);\r\n    };\r\n  }, [admin, socket, currentRoom, videoQueue]);\r\n\r\n  // EMIT CHANGE VIDEO IF ADMIN CHANGES\r\n  useEffect(() => {\r\n    if (admin) {\r\n      socket.emit(`videoChange`, {\r\n        currentVideoLink,\r\n        currentRoom,\r\n      });\r\n    }\r\n    // HERE CANT BE CURRENTROOM, CUZ I WILL SEND ANOTHER ADMIN DATA\r\n    // eslint-disable-next-line\r\n  }, [currentVideoLink, socket]);\r\n\r\n  // DELETING ADMIN IF SWITCHING BETWEEN CHANNELS\r\n  useEffect(() => {\r\n    window.addEventListener(\"beforeunload\", (ev) => {\r\n      ev.preventDefault();\r\n      socket.emit(\"leaveRoom\", { currentRoom });\r\n      socket.emit(\"adminLeave\");\r\n    });\r\n    setCurrentRoom(twitchStreamer);\r\n    // eslint-disable-next-line\r\n  }, [location.pathname]);\r\n\r\n  // JOINING TO ROOM\r\n  useEffect(() => {\r\n    socket.emit(`joinRoom`, { currentRoom });\r\n    return () => {\r\n      socket.emit(\"leaveRoom\", { currentRoom });\r\n      setAdmin(false);\r\n      socket.emit(\"adminLeave\");\r\n    };\r\n    // eslint-disable-next-line\r\n  }, [currentRoom]);\r\n\r\n  // SOCKETS LISTENERS FOR USERS ONLY\r\n  useEffect(() => {\r\n    socket.on(\"onlineUsersAnswer\", ({ onlineUsers }) => {\r\n      setOnlineUsers(onlineUsers);\r\n    });\r\n\r\n    if (!admin) {\r\n      socket.on(\"videoChangeAnswer\", ({ currentVideoLink }) => {\r\n        // TURNED OFF FOR ADMIN TO NOT LOOP PAGE\r\n        setCurrentVideoLink(currentVideoLink);\r\n      });\r\n      socket.on(\"isPlayingSocketAnswer\", ({ isPlaying, currentRoom }) => {\r\n        setIsPlaying(isPlaying);\r\n      });\r\n\r\n      socket.on(\"joinRoomAnswer\", ({ docs }) => {\r\n        setCurrentVideoLink(docs.currentVideoLink);\r\n        setOnlineUsers(docs.onlineUsers);\r\n        if (docs.admin) {\r\n          setIsAdminTaken(true);\r\n        } else {\r\n          setIsAdminTaken(false);\r\n        }\r\n      });\r\n\r\n      socket.on(\"adminAnswer\", ({ isAdminTaken }) => {\r\n        setIsAdminTaken(isAdminTaken);\r\n        console.log(isAdminTaken);\r\n      });\r\n\r\n      // SYNC SECONDS WITH ADMIN\r\n      socket.on(`adminDataAnswer`, ({ currentSeconds, videoQueue }) => {\r\n        setVideoQueue(videoQueue);\r\n        if (player.current) {\r\n          const videoDuration = player.current.getDuration();\r\n          const currentTime = player.current.getCurrentTime();\r\n          // FOR LIVESTREAMS\r\n          if (videoDuration > currentSeconds) {\r\n            // STANDARD VIDEO\r\n            if (\r\n              !(\r\n                currentTime - maxDelay < currentSeconds &&\r\n                currentTime + maxDelay > currentSeconds\r\n              )\r\n            ) {\r\n              // MAX 2 SENONDS DIFFERENCE\r\n              player.current.seekTo(currentSeconds, \"seconds\");\r\n            }\r\n          } else {\r\n            // HERE IS LIVESTREAM VERSION\r\n            if (\r\n              !(\r\n                currentTime < videoDuration + maxDelayLive &&\r\n                currentTime > videoDuration - maxDelayLive\r\n              )\r\n            ) {\r\n              player.current.seekTo(videoDuration, \"seconds\");\r\n            }\r\n          }\r\n        }\r\n      });\r\n\r\n      socket.on(\"adminRequestAnswer\", ({ success, message }) => {\r\n        if (success) {\r\n          setIsSuccess(true);\r\n          setSuccessMessage(message);\r\n          setAdmin(true);\r\n        } else {\r\n          setIsError(true);\r\n          setErrorMessage(message);\r\n        }\r\n      });\r\n\r\n      socket.on(\"adminQueueUpdateAnswer\", ({ videoQueue }) => {\r\n        console.log(videoQueue);\r\n        setVideoQueue(videoQueue);\r\n      });\r\n\r\n      return () => {\r\n        socket.removeAllListeners(`adminDataAnswer`);\r\n        socket.removeAllListeners(`joinRoomAnswer`);\r\n        socket.removeAllListeners(`isPlayingSocketAnswer`);\r\n        socket.removeAllListeners(`videoChangeAnswer`);\r\n        socket.removeAllListeners(\"adminAnswer\");\r\n        socket.removeAllListeners(\"adminRequestAnswer\");\r\n        socket.removeAllListeners(\"adminQueueUpdateAnswer\");\r\n      };\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [currentRoom, admin, socket, maxDelay]);\r\n\r\n  const startSendingTimeToSocket = () => {\r\n    // AVAILABLE ONLY FOR ADMIN\r\n    if (admin) {\r\n      setIsPlaying(true);\r\n      socket.emit(\"isPlaying\", {\r\n        isPlaying: true,\r\n        currentRoom,\r\n      });\r\n    }\r\n  };\r\n\r\n  const stopSendingTimeToSocket = () => {\r\n    // AVAILABLE ONLY FOR ADMIN\r\n    if (admin) {\r\n      setIsPlaying(false);\r\n      socket.emit(\"isPlaying\", {\r\n        isPlaying: false,\r\n        currentRoom,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleAdminRequest = () => {\r\n    socket.emit(\"adminRequest\", { currentRoom: twitchStreamer });\r\n  };\r\n\r\n  const handleChangeMaxDelay = (type) => {\r\n    if (type === \"increment\") {\r\n      setMaxDelay((prev) => prev + 1);\r\n    } else if (type === \"decrement\") {\r\n      setMaxDelay((prev) => {\r\n        if (prev > 2) {\r\n          return prev + -1;\r\n        } else {\r\n          return prev;\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleAdminCheckQueue = () => {\r\n    if (admin) {\r\n      if (videoQueue) {\r\n        setCurrentVideoLink(videoQueue[0]);\r\n        setVideoQueue((prev) => prev.slice(1));\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"videoAndChat\">\r\n      <div className=\"playerAndChat\">\r\n        <div className=\"player-wrapper\">\r\n          <ReactPlayer\r\n            ref={player}\r\n            onPlay={startSendingTimeToSocket}\r\n            onPause={stopSendingTimeToSocket}\r\n            playing={isPlaying}\r\n            onEnded={handleAdminCheckQueue}\r\n            className=\"react-player\"\r\n            url={currentVideoLink}\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            controls={true}\r\n            volume={0.1}\r\n          />\r\n        </div>\r\n        <div className=\"twitchChat\">\r\n          <span className=\"onlineUsers\">\r\n            {onlineUsers !== null ? `${onlineUsers} ONLINE` : \"CONNECTING\"}\r\n          </span>\r\n          <iframe\r\n            style={{ border: \"2px solid #121212\" }}\r\n            title=\"TwitchChat\"\r\n            id=\"chat_embed\"\r\n            src={`https://www.twitch.tv/embed/${twitchStreamer}/chat?darkpopout&parent=${websiteURL}`}\r\n            height=\"100%\"\r\n            width=\"100%\"\r\n          ></iframe>\r\n          {!admin && (\r\n            <>\r\n              <div className=\"delayInfoContainer\">\r\n                <span className=\"delayInfo\">Max Delay: {maxDelay} seconds</span>\r\n                <div className=\"delayManage\">\r\n                  <div\r\n                    className=\"delayManageOptionDecrement\"\r\n                    onClick={() => handleChangeMaxDelay(\"decrement\")}\r\n                  >\r\n                    <RemoveIcon />\r\n                  </div>\r\n                  <div\r\n                    className=\"delayManageOptionIncrement\"\r\n                    onClick={() => handleChangeMaxDelay(\"increment\")}\r\n                  >\r\n                    <AddIcon />\r\n                  </div>\r\n                </div>\r\n                {!isAdminTaken && (\r\n                  <Button\r\n                    text={\"GET ADMIN\"}\r\n                    onClick={handleAdminRequest}\r\n                    style={{ borderColor: \"white\", color: \"white\" }}\r\n                  />\r\n                )}\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PlayerAndChat;\r\n","import React from \"react\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { DataContext } from \"../../App\";\r\nimport { useContext } from \"react\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    \"& > * + *\": {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function CustomizedSnackbars() {\r\n  const { isSuccess, setIsSuccess, successMessage } = useContext(DataContext);\r\n  const classes = useStyles();\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setIsSuccess(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Snackbar open={isSuccess} autoHideDuration={1000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity=\"success\">\r\n          {successMessage}\r\n        </Alert>\r\n      </Snackbar>\r\n\r\n      {/* <Alert severity=\"success\">This is a success message!</Alert> */}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { DataContext } from \"../../App\";\r\nimport { useContext } from \"react\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    \"& > * + *\": {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function CustomizedSnackbars() {\r\n  const { isError, setIsError, errorMessage } = useContext(DataContext);\r\n  const classes = useStyles();\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setIsError(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Snackbar open={isError} autoHideDuration={1000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity=\"error\">\r\n          {errorMessage}\r\n        </Alert>\r\n      </Snackbar>\r\n\r\n      {/* <Alert severity=\"success\">This is a success message!</Alert> */}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\nimport { Switch, Route, useHistory } from \"react-router-dom\";\nimport io from \"socket.io-client\";\nimport \"./App.css\";\nimport AdminPanel from \"./comp/AdminPanel/AdminPanel\";\nimport PlayerAndChat from \"./comp/PlayerAndChat\";\nimport Success from \"./comp/Snackbars/Success\";\nimport Error from \"./comp/Snackbars/Error\";\nimport Queue from \"./comp/AdminPanel/Queue\";\nexport const DataContext = React.createContext();\n\nconst socket = io(`http://localhost:3001/`);\n// const serverURL = \"https://boiling-bastion-80662.herokuapp.com/\";\n// const socket = io(serverURL);\nconst App = () => {\n  const history = useHistory();\n  const [admin, setAdmin] = useState(false);\n  const [currentVideoLink, setCurrentVideoLink] = useState(\"\");\n  const [isSuccess, setIsSuccess] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [videoQueue, setVideoQueue] = useState([]);\n\n  useEffect(() => {\n    fetch(`https://noembed.com/embed?url=${currentVideoLink}`)\n      .then((res) => res.json())\n      .then((res) => {\n        document.title = res.title;\n        if (res.title === undefined) {\n          document.title = \"Watch Together\";\n        }\n      });\n  }, [currentVideoLink]);\n\n  return (\n    <>\n      <DataContext.Provider\n        value={{\n          admin,\n          setAdmin,\n          socket,\n          currentVideoLink,\n          setCurrentVideoLink,\n          history,\n          isSuccess,\n          setIsSuccess,\n          isError,\n          setIsError,\n          successMessage,\n          setSuccessMessage,\n          errorMessage,\n          setErrorMessage,\n          videoQueue,\n          setVideoQueue,\n        }}\n      >\n        <div className=\"app\">\n          <Switch>\n            {/* DEFAULT TWITCH CHAT FOR MY CHANNEL (VICTOROWSKY_) */}\n            <Route path=\"/\" exact>\n              <PlayerAndChat />\n              <div className=\"bottomDiv\">\n                {admin ? <AdminPanel /> : <Queue />}\n              </div>\n            </Route>\n            <Route path=\"/:twitchStreamer\" exact>\n              <PlayerAndChat />\n              <div className=\"bottomDiv\">\n                {admin ? <AdminPanel /> : <Queue />}\n              </div>\n            </Route>\n          </Switch>\n          <Success />\n          <Error />\n        </div>\n      </DataContext.Provider>\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { HashRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}