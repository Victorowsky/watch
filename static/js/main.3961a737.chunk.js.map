{"version":3,"sources":["comp/Button.js","comp/AdminPanel.js","comp/AdminLogin.js","comp/PlayerAndChat.js","comp/Snackbars/Success.js","comp/Snackbars/Error.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","root","margin","spacing","borderColor","color","transition","OutlinedButtons","text","onClick","style","classes","className","Button","variant","AdminPanel","useContext","DataContext","admin","setCurrentVideoLink","setAdmin","socket","setTwitchStreamerChat","useState","editVideoLink","setEditVideoLink","type","value","placeholder","onChange","e","target","display","preventDefault","newStreamerChat","prompt","emit","AdminLogin","history","password","setPassword","setIsAlert","twitchStreamer","useParams","on","success","message","push","prev","alert","setTimeout","position","top","left","transform","PlayerAndChat","location","useLocation","undefined","currentRoom","setCurrentRoom","currentVideoLink","onlineUsers","setIsSuccess","setIsError","setErrorMessage","setSuccessMessage","isPlaying","setIsPlaying","player","useRef","useEffect","interval","setInterval","currentSeconds","current","getCurrentTime","clearInterval","pathname","docs","videoDuration","getDuration","currentTime","seekTo","offAny","ref","onPlay","onPause","playing","url","width","height","controls","volume","border","title","id","src","Alert","props","elevation","marginTop","CustomizedSnackbars","isSuccess","successMessage","handleClose","event","reason","Snackbar","open","autoHideDuration","onClose","severity","isError","errorMessage","React","createContext","io","App","useHistory","setOnlineUsers","twitchStreamerChat","fetch","then","res","json","document","Provider","path","exact","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3961a737.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      borderColor: \"white\",\r\n      color: \"white\",\r\n      transition: \"0.3s\",\r\n      \"&:hover\": {\r\n        color: \"red\",\r\n        borderColor: \"red\",\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function OutlinedButtons({ text, onClick, style }) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Button\r\n        onClick={onClick && onClick}\r\n        style={style && style}\r\n        variant=\"outlined\"\r\n      >\r\n        {text ? text : \"Enter text\"}\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { useState } from \"react\";\r\n\r\nimport Button from \"./Button\";\r\nimport { DataContext } from \"../App\";\r\nimport \"./AdminPanel.css\";\r\n\r\nconst AdminPanel = () => {\r\n  const {\r\n    admin,\r\n    setAdmin,\r\n    setCurrentVideoLink,\r\n    socket,\r\n    setTwitchStreamerChat,\r\n  } = useContext(DataContext);\r\n  const [editVideoLink, setEditVideoLink] = useState();\r\n\r\n  const handleAddVideo = () => {\r\n    setCurrentVideoLink(editVideoLink);\r\n    setEditVideoLink(\"\");\r\n  };\r\n\r\n  // const handleLeaveAdmin = () => {\r\n  //   const confirmAnswer = window.confirm(\r\n  //     \"Are you sure you don't want to be admin?\"\r\n  //   );\r\n  //   if (confirmAnswer) {\r\n  //     setAdmin((prev) => !prev);\r\n  //     socket.emit(\"adminLeave\", {currentRoom});\r\n  //   }\r\n  // };\r\n\r\n  const handleChangeStreamersChat = () => {\r\n    const newStreamerChat = prompt(\"Insert new twitch user:\");\r\n    if (newStreamerChat) {\r\n      setTwitchStreamerChat(newStreamerChat);\r\n      socket.emit(\"changeStreamersChat\", newStreamerChat);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <br />\r\n      {admin && (\r\n        // ADDING VIDEO PANEL\r\n\r\n        <form>\r\n          <input\r\n            type=\"text\"\r\n            value={editVideoLink}\r\n            placeholder={\"VIDEO URL\"}\r\n            onChange={(e) => {\r\n              if (admin) {\r\n                setEditVideoLink(e.target.value);\r\n              }\r\n            }}\r\n          />\r\n\r\n          <button\r\n            style={{ display: \"none\" }}\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              handleAddVideo();\r\n            }}\r\n            type=\"submit\"\r\n          ></button>\r\n        </form>\r\n      )}\r\n      <div className=\"adminButtonsDiv\">\r\n        <Button\r\n          text={\"CHANGE STREAMER'S CHAT\"}\r\n          onClick={handleChangeStreamersChat}\r\n        />\r\n        {/* <Button text={\"LEAVE ADMIN\"} \r\n        onClick={handleLeaveAdmin} /> */}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminPanel;\r\n","import React, { useState } from \"react\";\r\nimport { useContext } from \"react\";\r\nimport { DataContext } from \"../App\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst AdminLogin = () => {\r\n  const { socket, admin, setAdmin, history } = useContext(DataContext);\r\n  const [password, setPassword] = useState(\"\");\r\n  const [isAlert, setIsAlert] = useState(0);\r\n  const { twitchStreamer } = useParams();\r\n\r\n  const handleLogin = () => {\r\n    socket.emit(\"handleLogin\", { password, twitchStreamer });\r\n  };\r\n\r\n  socket.on(\"handleLoginAnswer\", ({ success, message }) => {\r\n    if (success) {\r\n      if (!admin) {\r\n        setAdmin(true);\r\n      }\r\n      history.push(\"/\");\r\n    } else {\r\n      setIsAlert((prev) => {\r\n        prev++;\r\n        if (prev === 1) {\r\n          alert(message);\r\n        }\r\n        setTimeout(() => {\r\n          setIsAlert(0);\r\n        }, 100);\r\n      });\r\n    }\r\n  });\r\n  return (\r\n    <div\r\n      style={{\r\n        position: \"absolute\",\r\n        top: \"50%\",\r\n        left: \"50%\",\r\n        transform: \"translate(-50%,-50%)\",\r\n      }}\r\n    >\r\n      <form>\r\n        <input\r\n          type=\"text\"\r\n          value={password}\r\n          onChange={(e) => {\r\n            setPassword(e.target.value);\r\n          }}\r\n        />\r\n        <button\r\n          onClick={(e) => {\r\n            e.preventDefault();\r\n            handleLogin();\r\n          }}\r\n          type=\"submit\"\r\n          style={{ display: \"none\" }}\r\n        ></button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminLogin;\r\n","import React, { useContext } from \"react\";\r\nimport { useEffect, useState, useRef } from \"react\";\r\nimport ReactPlayer from \"react-player/lazy\";\r\nimport { DataContext } from \"../App\";\r\nimport \"./PlayerAndChat.css\";\r\nimport { useParams, useLocation } from \"react-router-dom\";\r\nimport Button from \"./Button\";\r\n\r\nconst PlayerAndChat = () => {\r\n  let location = useLocation();\r\n  let { twitchStreamer } = useParams();\r\n  // DEFAULT VALUE IS MY CHANNEL\r\n  if (twitchStreamer === undefined) {\r\n    twitchStreamer = \"victorowsky_\";\r\n  }\r\n\r\n  const [currentRoom, setCurrentRoom] = useState(twitchStreamer);\r\n\r\n  const {\r\n    admin,\r\n    setCurrentVideoLink,\r\n    currentVideoLink,\r\n    socket,\r\n    onlineUsers,\r\n    setAdmin,\r\n    setIsSuccess,\r\n    setIsError,\r\n    setErrorMessage,\r\n    setSuccessMessage,\r\n  } = useContext(DataContext);\r\n\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  const player = useRef();\r\n  const maxDelay = 2;\r\n  const maxDelayLive = 6;\r\n  const websiteURL = \"victorowsky.github.io\"; // FOR TWITCH CHAT\r\n  // const websiteURL = \"localhost\"; // FOR TWITCH CHAT\r\n\r\n  // ADMIN EMITS HIS DATA TO SHARE WITH OTHERS\r\n  useEffect(() => {\r\n    let interval;\r\n    if (admin) {\r\n      interval = setInterval(() => {\r\n        socket.emit(`adminData`, {\r\n          currentRoom,\r\n          currentSeconds: player.current.getCurrentTime(),\r\n        });\r\n      }, 3000);\r\n    }\r\n    return () => {\r\n      // socket.emit(\"adminLeave\", { currentRoom });\r\n      clearInterval(interval);\r\n    };\r\n  }, [admin, socket, currentRoom]);\r\n\r\n  // EMIT CHANGE VIDEO IF ADMIN CHANGES\r\n  useEffect(() => {\r\n    if (admin) {\r\n      socket.emit(`videoChange`, {\r\n        currentVideoLink,\r\n        currentRoom,\r\n      });\r\n    }\r\n    // HERE CAN BE CURRENTROOM, CUZ I WILL SEND ANOTHER ADMIN DATA\r\n  }, [currentVideoLink, socket]);\r\n\r\n  // DELETING ADMIN IF SWITCHING BETWEEN CHANNELS\r\n  useEffect(() => {\r\n    setCurrentRoom(twitchStreamer);\r\n    socket.emit(\"adminLeave\");\r\n  }, [location.pathname]);\r\n\r\n  // JOINING TO ROOM\r\n  useEffect(() => {\r\n    socket.emit(`joinRoom`, { currentRoom });\r\n    return () => {\r\n      socket.emit(\"leaveRoom\", { currentRoom });\r\n      setAdmin(false);\r\n      socket.emit(\"adminLeave\");\r\n    };\r\n  }, [currentRoom]);\r\n\r\n  // SOCKETS LISTENERS FOR USERS ONLY\r\n  useEffect(() => {\r\n    if (!admin) {\r\n      socket.on(\"videoChangeAnswer\", ({ currentVideoLink }) => {\r\n        // TURNED OFF FOR ADMIN TO NOT LOOP PAGE\r\n        setCurrentVideoLink(currentVideoLink);\r\n      });\r\n      socket.on(\"isPlayingSocketAnswer\", ({ isPlaying, currentRoom }) => {\r\n        setIsPlaying(isPlaying);\r\n      });\r\n\r\n      socket.on(\"joinRoomAnswer\", ({ docs }) => {\r\n        setCurrentVideoLink(docs.currentVideoLink);\r\n      });\r\n\r\n      // SYNC SECONDS WITH ADMIN\r\n      socket.on(`adminDataAnswer`, ({ currentSeconds }) => {\r\n        if (player.current) {\r\n          const videoDuration = player.current.getDuration();\r\n          const currentTime = player.current.getCurrentTime();\r\n          // FOR LIVESTREAMS\r\n          if (videoDuration > currentSeconds) {\r\n            if (\r\n              !(\r\n                currentTime < currentSeconds + maxDelayLive &&\r\n                currentTime > currentSeconds - maxDelayLive\r\n              )\r\n            ) {\r\n              // MAX 2 SENONDS DIFFERENCE\r\n              player.current.seekTo(currentSeconds, \"seconds\");\r\n            }\r\n          } else {\r\n            // HERE IS LIVESTREAM VERSION\r\n            if (\r\n              !(\r\n                currentTime < videoDuration + maxDelay - 3 &&\r\n                currentTime > videoDuration - maxDelay - 3\r\n              )\r\n            ) {\r\n              player.current.seekTo(videoDuration - 3, \"seconds\");\r\n            }\r\n          }\r\n        }\r\n      });\r\n\r\n      return () => {\r\n        socket.offAny();\r\n      };\r\n    }\r\n  }, [currentRoom, admin]);\r\n\r\n  const startSendingTimeToSocket = () => {\r\n    // AVAILABLE ONLY FOR ADMIN\r\n    if (admin) {\r\n      setIsPlaying(true);\r\n      socket.emit(\"isPlaying\", {\r\n        isPlaying: true,\r\n        currentRoom,\r\n      });\r\n    }\r\n  };\r\n\r\n  const stopSendingTimeToSocket = () => {\r\n    // AVAILABLE ONLY FOR ADMIN\r\n    if (admin) {\r\n      setIsPlaying(false);\r\n      socket.emit(\"isPlaying\", {\r\n        isPlaying: false,\r\n        currentRoom,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleAdminRequest = () => {\r\n    socket.emit(\"adminRequest\", { currentRoom: twitchStreamer });\r\n  };\r\n\r\n  socket.on(\"adminRequestAnswer\", ({ success, message }) => {\r\n    if (success) {\r\n      setIsSuccess(true);\r\n      setSuccessMessage(message);\r\n      setAdmin(true);\r\n    } else {\r\n      setIsError(true);\r\n      setErrorMessage(message);\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div className=\"videoAndChat\">\r\n      <div className=\"playerAndChat\">\r\n        <div className=\"player-wrapper\">\r\n          <ReactPlayer\r\n            ref={player}\r\n            onPlay={startSendingTimeToSocket}\r\n            onPause={stopSendingTimeToSocket}\r\n            playing={isPlaying}\r\n            className=\"react-player\"\r\n            url={currentVideoLink}\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            controls={true}\r\n            volume={0.1}\r\n          />\r\n        </div>\r\n        <div className=\"twitchChat\">\r\n          <span className=\"onlineUsers\">\r\n            {onlineUsers ? `${onlineUsers} ONLINE` : \"CONNECTING\"}\r\n          </span>\r\n          <iframe\r\n            style={{ border: \"2px solid #121212\" }}\r\n            title=\"TwitchChat\"\r\n            id=\"chat_embed\"\r\n            src={`https://www.twitch.tv/embed/${twitchStreamer}/chat?darkpopout&parent=${websiteURL}`}\r\n            height=\"100%\"\r\n            width=\"100%\"\r\n          ></iframe>\r\n          {!admin && (\r\n            <Button\r\n              text={\"GET ADMIN\"}\r\n              onClick={handleAdminRequest}\r\n              style={{ borderColor: \"white\", color: \"white\" }}\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PlayerAndChat;\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { DataContext } from \"../../App\";\r\nimport { useContext } from \"react\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    \"& > * + *\": {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function CustomizedSnackbars() {\r\n  const { isSuccess, setIsSuccess, successMessage } = useContext(DataContext);\r\n  const classes = useStyles();\r\n\r\n  const handleClick = () => {\r\n    setIsSuccess(true);\r\n  };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setIsSuccess(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Snackbar open={isSuccess} autoHideDuration={3000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity=\"success\">\r\n          {successMessage}\r\n        </Alert>\r\n      </Snackbar>\r\n\r\n      {/* <Alert severity=\"success\">This is a success message!</Alert> */}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { DataContext } from \"../../App\";\r\nimport { useContext } from \"react\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    \"& > * + *\": {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function CustomizedSnackbars() {\r\n  const { isError, setIsError, errorMessage } = useContext(DataContext);\r\n  const classes = useStyles();\r\n\r\n  const handleClick = () => {\r\n    setIsError(true);\r\n  };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setIsError(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Snackbar open={isError} autoHideDuration={3000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity=\"error\">\r\n          {errorMessage}\r\n        </Alert>\r\n      </Snackbar>\r\n\r\n      {/* <Alert severity=\"success\">This is a success message!</Alert> */}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\nimport { Switch, Route, useHistory } from \"react-router-dom\";\nimport io from \"socket.io-client\";\nimport \"./App.css\";\nimport AdminPanel from \"./comp/AdminPanel\";\nimport AdminLogin from \"./comp/AdminLogin\";\nimport PlayerAndChat from \"./comp/PlayerAndChat\";\nimport Success from \"./comp/Snackbars/Success\";\nimport Error from \"./comp/Snackbars/Error\";\nexport const DataContext = React.createContext();\n\n// const socket = io(`http://localhost:3001/`);\nconst serverURL = \"https://boiling-bastion-80662.herokuapp.com/\";\nconst socket = io(serverURL);\nconst App = () => {\n  const history = useHistory();\n  const [admin, setAdmin] = useState(false);\n  const [currentVideoLink, setCurrentVideoLink] = useState(\"\");\n  const [onlineUsers, setOnlineUsers] = useState(null);\n  const [twitchStreamerChat, setTwitchStreamerChat] = useState();\n  const [isSuccess, setIsSuccess] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  useEffect(() => {\n    fetch(`https://noembed.com/embed?url=${currentVideoLink}`)\n      .then((res) => res.json())\n      .then((res) => {\n        document.title = res.title;\n        if (res.title === undefined) {\n          document.title = \"Watch Together\";\n        }\n      });\n  }, [currentVideoLink]);\n\n  socket.on(\"onlineUsers\", (onlineUsers) => {\n    setOnlineUsers(onlineUsers);\n  });\n\n  return (\n    <>\n      <DataContext.Provider\n        value={{\n          admin,\n          setAdmin,\n          socket,\n          currentVideoLink,\n          setCurrentVideoLink,\n          history,\n          onlineUsers,\n          twitchStreamerChat,\n          setTwitchStreamerChat,\n          isSuccess,\n          setIsSuccess,\n          isError,\n          setIsError,\n          successMessage,\n          setSuccessMessage,\n          errorMessage,\n          setErrorMessage,\n        }}\n      >\n        <div className=\"app\">\n          <Switch>\n            {/* DEFAULT TWITCH CHAT FOR MY CHANNEL (VICTOROWSKY_) */}\n            <Route path=\"/\" exact>\n              <PlayerAndChat />\n              <div className=\"bottomDiv\">{admin && <AdminPanel />}</div>\n            </Route>\n            <Route path=\"/:twitchStreamer\" exact>\n              <PlayerAndChat />\n              <div className=\"bottomDiv\">{admin && <AdminPanel />}</div>\n            </Route>\n\n            <Route path=\"/admin\" exact>\n              <AdminLogin />\n            </Route>\n            <Route path=\"/:twitchStreamer/admin\">\n              <AdminLogin />\n            </Route>\n          </Switch>\n          <Success />\n          <Error />\n        </div>\n      </DataContext.Provider>\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { HashRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}